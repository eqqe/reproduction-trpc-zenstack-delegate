//////////////////////////////////////////////////////////////////////////////////////////////
// DO NOT MODIFY THIS FILE                                                                  //
// This file is automatically generated by ZenStack CLI and should not be manually updated. //
//////////////////////////////////////////////////////////////////////////////////////////////

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

generator js {
  provider = "prisma-client-js"
}

/// @@allow('all', true)
model User {
  id            String    @id() @default(uuid())
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt()
  /// @email
  email         String    @unique()
  emailVerified DateTime?
  /// @password
  /// @omit
  password      String?
  name          String?
  contents      Content[]
  accounts      Account[]
}

model Account {
  id                       String  @id() @default(uuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  refresh_token_expires_in Int?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

/// @@delegate(contentType)
/// @@allow('all', true)
model Content {
  id                Int    @id() @default(autoincrement())
  user              User   @relation(fields: [userId], references: [id])
  userId            String
  contentType       String
  delegate_aux_post Post?
}

/// @@allow('all', true)
model Post {
  id                   Int     @id()
  title                String
  delegate_aux_content Content @relation(fields: [id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
