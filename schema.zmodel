/*
* Sample model for a collaborative Todo app
*/

/*
 * Data source definition
 */
datasource db {
    provider = 'postgresql'
    url = env('POSTGRES_PRISMA_URL')
    directUrl = env('POSTGRES_URL_NON_POOLING')
}

generator js {
    provider = 'prisma-client-js'
}

plugin trpc {
    provider = '@zenstackhq/trpc'
    output = 'server/routers/generated'
    generateClientHelpers = 'next'
}


/*
 * Model for a user
 */
model User {
    id            String      @id @default(uuid())
    createdAt     DateTime    @default(now())
    updatedAt     DateTime    @updatedAt
    email         String      @unique @email
    emailVerified DateTime?
    password      String?     @password @omit
    name          String?

    contents Content[]


    // next-auth
    accounts      Account[]

    // full access by oneself
    @@allow('all', true)
}


// next-auth
model Account {
    id                       String  @id @default(uuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String?
    refresh_token_expires_in Int?
    access_token             String?
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String?
    session_state            String?
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    @@unique([provider, providerAccountId])
}




model Content  {
  id          Int      @id @default(autoincrement())
  user       User @relation(fields: [userId], references: [id])
  userId    String @default(auth().id)

  contentType String

  @@delegate(contentType)

  @@allow('all', true)
}


model Post extends  Content {
  title String
}
